{"version":3,"sources":["components/Home.jsx","components/Login.jsx","components/Logout.jsx","components/PostList.jsx","components/PostInfo.jsx","components/PostAdd.jsx","components/PostEdit.jsx","components/App.jsx","registerServiceWorker.js","index.js"],"names":["Home","className","Login","handleSubmit","bind","event","preventDefault","request","document","getElementById","value","post","then","response","localStorage","setItem","data","jwt","props","history","push","error","console","log","onSubmit","this","htmlFor","name","id","type","Component","Logout","removeItem","Redirect","to","PostList","state","posts","token","getItem","axios","method","url","headers","Authorization","setState","map","key","Link","title","content","PostInfo","handleDelete","match","params","onClick","PostAdd","handleChange","handleCancel","target","onChange","rows","PostEdit","React","App","Navigation","NavLink","exact","activeClassName","Main","Switch","Route","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","process","origin","addEventListener","fetch","status","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.13c1f94c.chunk.js","sourcesContent":["import React from 'react';\n\nconst Home = () => {\n  return (\n    <div className=\"jumbotron\">\n      <h1>Home Page</h1>\n    </div>\n  );\n}\n\nexport default Home;","import React, { Component } from 'react'\nimport { post } from 'axios';\n\nclass Login extends Component {\n  constructor() {\n    super()\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit (event) {\n    event.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const request = {\"auth\": {\"email\": email, \"password\": password}};\n    post('/api/user_token', request)\n      .then(response => {\n        localStorage.setItem(\"jwt\", response.data.jwt);\n        this.props.history.push(\"/\");\n      })\n      .catch(error => console.log('error', error));\n  }      \n\n  render() {\n    return (\n      <div>\n        <h1>Log In</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email: </label>\n            <input name=\"email\" id=\"email\" type=\"email\" className=\"form-control\" />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password:</label>\n            <input name=\"password\" id=\"password\" type=\"password\" className=\"form-control\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-dark\">Submit</button>\n        </form>\n\n      </div>\n    );\n  }\n}\n\nexport default Login;","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nconst Logout = () => {\n  localStorage.removeItem('jwt');\n  return <Redirect to='/' />\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass PostList extends Component {\n  constructor() {\n    super();\n    this.state = { posts: [] };\n  }\n\n  componentDidMount() {\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"get\",\n      url: \"/api/posts\",\n      headers: { Authorization: token }\n    })\n      .then(response => {\n        this.setState({ posts: response.data });\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.posts.map(post => {\n          return (\n            <div key={post.id}>\n              <h2>\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\n              </h2>\n              {post.content}\n              <hr />\n            </div>\n          );\n        })}\n        <Link to=\"/posts/new\" className=\"btn btn-outline-primary\">\n          Create Post\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default PostList;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass PostInfo extends Component {\n  constructor() {\n    super();\n    this.state = { post: {} };\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  componentDidMount() {\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"get\",\n      url: `/api/posts/${this.props.match.params.id}`,\n      headers: { Authorization: token }\n    })\n      .then(response => {\n        this.setState({\n          post: response.data\n        });\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  handleDelete() {\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"delete\",\n      url: `/api/posts/${this.props.match.params.id}`,\n      headers: { Authorization: token }\n    })\n      .then(() => {\n        this.props.history.push(\"/posts\");\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>\n          {this.state.post.id}: {this.state.post.title}\n        </h2>\n        <p>{this.state.post.content}</p>\n        <p>\n          <Link\n            to={`/posts/${this.state.post.id}/edit`}\n            className=\"btn btn-outline-dark\"\n          >\n            Edit\n          </Link>\n          <button onClick={this.handleDelete} className=\"btn btn-outline-dark\">\n            Delete\n          </button>\n          <Link to=\"/posts\" className=\"btn btn-outline-dark\">\n            Close\n          </Link>\n        </p>\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default PostInfo;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass PostAdd extends Component {\n  constructor() {\n    super();\n    this.state = { title: \"\", content: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"post\",\n      url: \"/api/posts\",\n      headers: { Authorization: token },\n      data: this.state\n    })\n      .then(response => {\n        this.props.history.push(`/posts/${response.data.id}`);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleCancel() {\n    this.props.history.push(\"/posts\");\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Create Post</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Content</label>\n            <textarea\n              name=\"content\"\n              rows=\"5\"\n              value={this.state.content}\n              onChange={this.handleChange}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"submit\" className=\"btn btn-dark\">\n              Create\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.handleCancel}\n              className=\"btn btn-secondary\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostAdd;\n","import React from \"react\";\nimport axios from \"axios\";\n\nclass PostEdit extends React.Component {\n  constructor() {\n    super();\n    this.state = { title: \"\", content: \"\" };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  componentDidMount() {\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"get\",\n      url: `/api/posts/${this.props.match.params.id}`,\n      headers: { Authorization: token }\n    })\n      .then(response => {\n        this.setState(response.data);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({\n      method: \"patch\",\n      url: `/api/posts/${this.state.id}`,\n      headers: { Authorization: token },\n      data: this.state\n    })\n      .then(() => {\n        this.props.history.push(`/posts/${this.state.id}`);\n      })\n      .catch(error => console.log(\"error\", error));\n  }\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleCancel() {\n    this.props.history.push(`/posts/${this.state.id}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Edit {this.state.title}</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={this.state.title}\n              onChange={this.handleChange}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Content</label>\n            <textarea\n              name=\"content\"\n              rows=\"5\"\n              value={this.state.content}\n              onChange={this.handleChange}\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"submit\" className=\"btn btn-dark\">\n              Update\n            </button>\n            <button\n              type=\"button\"\n              onClick={this.handleCancel}\n              className=\"btn btn-secondary\"\n            >\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default PostEdit;\n","import React, { Component } from \"react\";\nimport \"../stylesheets/App.css\";\nimport Home from \"./Home\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport PostList from \"./PostList\";\nimport PostInfo from \"./PostInfo\";\nimport PostAdd from \"./PostAdd\";\nimport PostEdit from \"./PostEdit\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <Navigation />\n          <Main />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst Navigation = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item\">\n        <NavLink exact className=\"nav-link\" activeClassName=\"active\" to=\"/\">\n          Home\n        </NavLink>\n      </li>\n      <li className=\"nav-item\">\n        <NavLink\n          exact\n          className=\"nav-link\"\n          activeClassName=\"active\"\n          to=\"/posts\"\n        >\n          Posts\n        </NavLink>\n      </li>\n      {localStorage.getItem(\"jwt\") ? (\n        <li className=\"nav-item\">\n          <NavLink exact className=\"nav-link\" to=\"/logout\">\n            Log Out\n          </NavLink>\n        </li>\n      ) : (\n        <li className=\"nav-item\">\n          <NavLink\n            exact\n            className=\"nav-link\"\n            activeClassName=\"active\"\n            to=\"/login\"\n          >\n            Log In\n          </NavLink>\n        </li>\n      )}\n    </ul>\n  </nav>\n);\nconst Main = () => (\n  <Switch>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/logout\" component={Logout} />\n    <Route exact path=\"/posts\" component={PostList} />\n    <Route exact path=\"/posts/new\" component={PostAdd} />\n    <Route exact path=\"/posts/:id\" component={PostInfo} />\n    <Route exact path=\"/posts/:id/edit\" component={PostEdit} />\n  </Switch>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}